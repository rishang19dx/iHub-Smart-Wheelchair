<launch>
  
 <include file="$(find my_imu_package)/launch/my_imu_with_rviz.launch" ></include>
 <include file="$(find realsense2_camera)/launch/rs_camera.launch" ></include>
 
  <node pkg="tf2_ros" 
    type="static_transform_publisher" 
    name="camera_link_to_base_link" 
    args="0 0 -0.45 0 0 0  base_link camera_link" />
  
  <include file="$(find rplidar_ros)/launch/rplidar_a1.launch" ></include>

  <node pkg="tf2_ros" 
    type="static_transform_publisher" 
    name="imu_to_base_link" 
    args="0 0 0 0 0 0 base_link imu_link" />

  <node pkg="tf2_ros" 
    type="static_transform_publisher" 
    name="camera_to_camera_link" 
    args="0 0 0 0 0 0 camera_link camera__color_optical_frame" />

  <node pkg="tf2_ros" 
    type="static_transform_publisher" 
    name="depth_camera_to_camera_link" 
    args="0 0 0 0 0 0  camera_link camera__depth_optical_frame" />

  <node pkg="tf2_ros" 
    type="static_transform_publisher" 
    name="laser_to_base_link" 
    args="0 0 -0.15 1.57 0 0 base_link laser" />

  <!-- <node pkg="tf2_ros" type="static_transform_publisher" name="laser_to_camera_link" args="0 0 0.3 1.57 0 0 camera_link laser" /> -->

  <node pkg="rtabmap_odom" type="rgbd_odometry" name="rgbd_odometry" output="screen">
    <param name="frame_id" value="camera_link" />
    <param name="approx_sync" value="true" />
    
    <remap from="/rgb/image" to="/camera/color/image_raw" />
    <remap from="/depth/image" to="/camera/depth/image_rect_raw" />
    <remap from="/rgb/camera_info" to="/camera/color/camera_info" />
  </node>

   
   <node pkg="robot_localization" type="ekf_localization_node" name="ekf_localization_node" output="screen">
    <param name="use_sim_time" value="false"/>
    <param name="frame_id" value="base_link"/>
    <rosparam command="load" file="$(find lam_pkg)/config/ekf.yaml" />
  </node>

</launch>
